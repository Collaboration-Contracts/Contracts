<div class="row contract-table-container">
  <div class="col m10 offset-m1">
    <%= form_for [@contract] do |f| %>
      <div class="col l8 m12 contract-title">
        <div class="input-field">
          <%= f.text_field :title, class: 'validate' %>
          <label for="contract-title">Add a Contract Title</label>
        </div>
      </div>
      <div class="col l8 m12 contract-description">
        <div class="input-field">
          <%= f.text_field :description, class: 'validate' %>
          <label for="contract-description">Add a Contract Description</label>
        </div>
      </div>
      <table class="contract-table striped bordered" border='1'>
        <thead>
          <tr>
            <th></th>
            <% ROLES.each do |roleName,roleDetails| %>
              <th>
                <%= roleName %>
                <div class="icon-container">
                  <a class='material-icons'>info</a>
                  <span class="role-tooltiptext"><strong><%= roleDetails[:title] %></strong><br><%= roleDetails[:action] %></span>
                </div>
              </th>
            <% end %>
          </tr>
        </thead>

        <tbody>
          <% 10.times do %>
            <tr>
              <td><textarea placeholder="Add a line item.."></textarea></td>
              <% ROLES.length.times do %>
                <td><textarea></textarea></td>
              <% end %>
            </tr>
          <% end %>
        </tbody>
      </table>
      <div class="save-contract-options">
        <% unless current_user %>
          <div class="user-links">
            <%= render 'partials/login_modal' %>
            or
            <%= render 'partials/reg_modal', :@user => @user %>
            if you want to
          </div>
        <% end %>
        <div class="saved-contract-flash"><%=flash[:confirmation_message]%></div>
        <%= button_tag(type: 'submit', class: "btn waves-effect waves-purple", disabled: disabled_btn?, id: 'save-contract') do %>
           Save
        <% end %>

        <!-- <%= f.submit "Save", { disabled: disabled_btn?, id: 'save-contract', class: 'btn waves-effect waves-purple' } %> -->
      </div>
    </div>
  <% end %>
</div>

<script type="text/javascript">
  $( document ).on('turbolinks:load', function() {
    const emptyRow = $('tbody').find('tr').clone();

    function addRow() {
      $('tbody tr').length <= 10 && $('.contract-table').find('tbody').append(emptyRow.clone());
    }

    var $titleInput = $('.contract-title').find('input');
    var $descriptionInput = $('.contract-description').find('input');

    var ogTitleText = "Add a Contract Title";
    var ogDescText = "Add a Contract Description";

    $titleInput.focusin(function() {
      $titleInput.next().text('Contract Title');
    })

    $descriptionInput.focusin(function() {
      $descriptionInput.next().text('Description');
    })

    $titleInput.focusout(function() {
      $titleInput.val().length === 0 && $titleInput.next().text(ogTitleText);
    })

    $descriptionInput.focusout(function() {
      $descriptionInput.val().length === 0 && $descriptionInput.next().text(ogDescText);
    })
  })

  // for when table didn't use text areas - leaving this in case we revert //
  ///////////////////////////////////////////////////////////////////////////
  // $('input').on('focus', function() {
  //   initWidth = $(this).outerWidth() - ($(this).val().length*3)
  //
  //   $(this).keyup(function(){
  //     var $this = $(this);
  //     var modifier = (($this.val().length)*3)
  //     var newWidth = initWidth + modifier;
  //
  //     if (modifier === 0) {
  //       $this.css('width', initWidth);
  //     } else if (modifier > 30) {
  //       $this.css('width', newWidth);
  //     }
  //   })
  // })
</script>
